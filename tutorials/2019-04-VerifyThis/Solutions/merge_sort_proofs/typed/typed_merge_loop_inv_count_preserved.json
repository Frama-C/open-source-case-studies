[ { "prover": "script", "verdict": "valid" },
  { "header": "Definition", "tactic": "Wp.unfold", "params": {},
    "select": { "select": "inside-goal", "occur": 0,
                "target": "(L_count Mint_0 (shift_sint32 (global L_tmp_81) 0) i_6 0\n  ((to_uint32 (1+tidx_1))-1))",
                "pattern": "L_count$Mintshift_sint32$i0+global" },
    "children": { "Unfold 'L_count'": [ { "prover": "alt-ergo",
                                          "verdict": "timeout", "time": 10. },
                                        { "header": "Instance",
                                          "tactic": "Wp.instance",
                                          "params": { "P1": { "select": "inside-goal",
                                                              "occur": 0,
                                                              "target": "i_6",
                                                              "pattern": "$i" },
                                                      "P2": null, "P3": null,
                                                      "P4": null, "P5": null,
                                                      "P6": null, "P7": null,
                                                      "P8": null, "P9": null,
                                                      "P10": null },
                                          "select": { "select": "clause-step",
                                                      "at": 11,
                                                      "kind": "have",
                                                      "target": "let a_0 = (shift_sint32 (global L_tmp_81) 0) in\nlet a_1 = (havoc Mint_undef_1 Mint_10 a_0 (high_0-low_0)) in\nforall i_0:int.\n(is_sint32 i_0)\n-> (((L_count a_1 a_0 i_0 low_0 (lidx_5-1))+\n     (L_count a_1 a_0 i_0 middle_0 (low_0+middle_0+tidx_1-1-lidx_5)))=\n    (L_count a_1 a_0 i_0 0 (tidx_1-1)))",
                                                      "pattern": "\\F>is_sint32=#0+L_countL_countL_count" },
                                          "children": { "Instance": [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Lemma",
                                                                    "tactic": "Wp.lemma",
                                                                    "params": 
                                                                    { "lemma": 
                                                                    { "id": "count_id",
                                                                    "title": "count_id",
                                                                    "descr": "(is_sint32 key_0)\n-> (forall i_0:int.\n    let a_0 = (shift_sint32 a_0 i_0) in\n    (i_0<=high_0) -> (low_0<=i_0) -> (Mint_1[a_0]=Mint_0[a_0]))\n-> ((L_count Mint_1 a_0 key_0 low_0 high_0)=\n    (L_count Mint_0 a_0 key_0 low_0 high_0))" },
                                                                    "P1": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "Mint_0",
                                                                    "pattern": "$Mint" },
                                                                    "P2": 
                                                                    { "select": "inside-step",
                                                                    "at": 11,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_1 Mint_10 (shift_sint32 (global L_tmp_81) 0)\n  (high_0-low_0))",
                                                                    "pattern": "havoc$Mint_undef$Mintshift_sint32" },
                                                                    "P3": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "a_0",
                                                                    "pattern": "$a" },
                                                                    "P4": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "i_6",
                                                                    "pattern": "$i" },
                                                                    "P5": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "low_0",
                                                                    "pattern": "$low" },
                                                                    "P6": 
                                                                    { "select": "inside-step",
                                                                    "at": 11,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "lidx_5-1",
                                                                    "pattern": "+-1$lidx" },
                                                                    "P7": null,
                                                                    "P8": null,
                                                                    "P9": null,
                                                                    "P10": null },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 11,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(L_count\n  (havoc Mint_undef_1 Mint_10 (shift_sint32 (global L_tmp_81) 0)\n    (high_0-low_0)) a_0 i_6 low_0 (lidx_5-1))",
                                                                    "pattern": "L_counthavoc$a$i$low+$Mint_undef" },
                                                                    "children": 
                                                                    { "count_id": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Lemma",
                                                                    "tactic": "Wp.lemma",
                                                                    "params": 
                                                                    { "lemma": 
                                                                    { "id": "count_id",
                                                                    "title": "count_id",
                                                                    "descr": "(is_sint32 key_0)\n-> (forall i_0:int.\n    let a_0 = (shift_sint32 a_0 i_0) in\n    (i_0<=high_0) -> (low_0<=i_0) -> (Mint_1[a_0]=Mint_0[a_0]))\n-> ((L_count Mint_1 a_0 key_0 low_0 high_0)=\n    (L_count Mint_0 a_0 key_0 low_0 high_0))" },
                                                                    "P1": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "Mint_0",
                                                                    "pattern": "$Mint" },
                                                                    "P2": 
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_1 Mint_10 (shift_sint32 (global L_tmp_81) 0)\n  (high_0-low_0))",
                                                                    "pattern": "havoc$Mint_undef$Mintshift_sint32" },
                                                                    "P3": 
                                                                    { "select": "inside-step",
                                                                    "at": 2,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "a_0",
                                                                    "pattern": "$a" },
                                                                    "P4": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_6",
                                                                    "pattern": "$i" },
                                                                    "P5": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "middle_0",
                                                                    "pattern": "$middle" },
                                                                    "P6": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "low_0+middle_0+tidx_1-1-lidx_5",
                                                                    "pattern": "+-1$low$middle$tidx.-1$lidx" },
                                                                    "P7": null,
                                                                    "P8": null,
                                                                    "P9": null,
                                                                    "P10": null },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(L_count Mint_0 a_0 i_6 middle_0 (hidx_0-1))",
                                                                    "pattern": "L_count$Mint$a$i$middle+-1$hidx" },
                                                                    "children": 
                                                                    { "count_id": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Lemma",
                                                                    "tactic": "Wp.lemma",
                                                                    "params": 
                                                                    { "lemma": 
                                                                    { "id": "count_id",
                                                                    "title": "count_id",
                                                                    "descr": "(is_sint32 key_0)\n-> (forall i_0:int.\n    let a_0 = (shift_sint32 a_0 i_0) in\n    (i_0<=high_0) -> (low_0<=i_0) -> (Mint_1[a_0]=Mint_0[a_0]))\n-> ((L_count Mint_1 a_0 key_0 low_0 high_0)=\n    (L_count Mint_0 a_0 key_0 low_0 high_0))" },
                                                                    "P1": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "Mint_0",
                                                                    "pattern": "$Mint" },
                                                                    "P2": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(havoc Mint_undef_1 Mint_10 (shift_sint32 (global L_tmp_81) 0)\n  (high_0-low_0))",
                                                                    "pattern": "havoc$Mint_undef$Mintshift_sint32" },
                                                                    "P3": 
                                                                    { "select": "inside-step",
                                                                    "at": 11,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "a_0",
                                                                    "pattern": "$a" },
                                                                    "P4": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_6",
                                                                    "pattern": "$i" },
                                                                    "P5": 
                                                                    { "select": "inside-step",
                                                                    "at": 2,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "0",
                                                                    "pattern": "0" },
                                                                    "P6": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "tidx_1-1",
                                                                    "pattern": "+-1$tidx" },
                                                                    "P7": null,
                                                                    "P8": null,
                                                                    "P9": null,
                                                                    "P10": null },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (shift_sint32 (global L_tmp_81) 0) in\n(L_count (havoc Mint_undef_1 Mint_10 a_0 (high_0-low_0)) a_0 i_6 0\n  (tidx_1-1))",
                                                                    "pattern": "L_counthavocshift_sint32$i0+$Mint_undef" },
                                                                    "children": 
                                                                    { "count_id": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 25,
                                                                    "kind": "branch",
                                                                    "target": "middle_0<=lidx_5",
                                                                    "pattern": "<=$middle$lidx" },
                                                                    "children": 
                                                                    { "Then": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0) (high_0+tidx_1-hidx_1)) in\n(L_count a_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 hidx_1)]] a_0\n  i_6 (hidx_1-tidx_1) (lidx_0-1))",
                                                                    "pattern": "L_count[=]$a$i++havocshift_sint32" },
                                                                    "children": 
                                                                    { "Unfold 'L_count'": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Array",
                                                                    "tactic": "Wp.array",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0) (high_0+tidx_1-hidx_1)) in\na_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 hidx_1)]]\n  [(shift_sint32 a_0 ((to_uint32 (1+tidx_1))-1))]",
                                                                    "pattern": "[][=]shift_sint32havocshift_sint32" },
                                                                    "children": {} } ] } } ],
                                                                    "Else": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 27,
                                                                    "kind": "branch",
                                                                    "target": "high_0<=hidx_4",
                                                                    "pattern": "<=$high$hidx" },
                                                                    "children": 
                                                                    { "Then": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (middle_0+tidx_1-lidx_5)) in\n(L_count a_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]] a_0\n  i_6 (hidx_0+lidx_5-middle_0-tidx_1) ((to_uint32 (1+lidx_5))-1))",
                                                                    "pattern": "L_count[=]$a$i++havocshift_sint32" },
                                                                    "children": 
                                                                    { "Unfold 'L_count'": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Array",
                                                                    "tactic": "Wp.array",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (middle_0+tidx_1-lidx_5)) in\na_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]]\n  [(shift_sint32 a_0 ((to_uint32 (1+tidx_1))-1))]",
                                                                    "pattern": "[][=]shift_sint32havocshift_sint32" },
                                                                    "children": {} } ] } } ],
                                                                    "Else": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 31,
                                                                    "kind": "branch",
                                                                    "target": "let a_0 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 (global L_tmp_81) 0)\n      (high_0+middle_0+tidx_1-hidx_4-lidx_5)) in\na_0[(shift_sint32 a_0 lidx_5)]<=a_0[(shift_sint32 a_0 hidx_4)]",
                                                                    "pattern": "<=[][]havocshift_sint32havocshift_sint32" },
                                                                    "children": 
                                                                    { "Then": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\n(L_count a_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]] a_0\n  i_6 (hidx_0+lidx_5-middle_0-tidx_1) ((to_uint32 (1+lidx_5))-1))",
                                                                    "pattern": "L_count[=]$a$i++havocshift_sint32" },
                                                                    "children": 
                                                                    { "Unfold 'L_count'": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(to_uint32 (1+tidx_1))<=0",
                                                                    "pattern": "<=to_uint320+1$tidx" },
                                                                    "children": 
                                                                    { "Gt": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(middle_0+tidx_1+(to_uint32 (1+lidx_5)))<=(hidx_0+lidx_5)",
                                                                    "pattern": "<=++$middle$tidxto_uint32$hidx$lidx" },
                                                                    "children": 
                                                                    { "Gt": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "CASES",
                                                                    "clause": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\na_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]]\n  [(shift_sint32 a_0 ((to_uint32 (1+tidx_1))-1))]=i_6",
                                                                    "pattern": "=[]$i[=]shift_sint32havocshift_sint32" } },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\na_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]]\n  [(shift_sint32 a_0 ((to_uint32 (1+tidx_1))-1))]=i_6",
                                                                    "pattern": "=[]$i[=]shift_sint32havocshift_sint32" },
                                                                    "children": 
                                                                    { "Positive": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\nlet a_2 = a_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]] in\na_2[(shift_sint32 a_0 ((to_uint32 (1+tidx_1))-1))]=\na_2[(shift_sint32 a_0 ((to_uint32 (1+lidx_5))-1))]",
                                                                    "pattern": "=[][][=]shift_sint32[=]shift_sint32" } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-step",
                                                                    "at": 11,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "lidx_5-1",
                                                                    "pattern": "+-1$lidx" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(to_uint32 (1+lidx_5))-2",
                                                                    "pattern": "+-2to_uint32+1$lidx" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "tidx_1-1",
                                                                    "pattern": "+-1$tidx" },
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(to_uint32 (1+tidx_1))-2",
                                                                    "pattern": "+-2to_uint32+1$tidx" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 = (shift_sint32 a_0 0) in\nlet a_2 =\n    (havoc Mint_undef_1 Mint_10 a_1 (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\nlet a_3 = a_2[(shift_sint32 a_0 lidx_5)] in\n(L_count a_2[(shift_sint32 a_0 tidx_1)->a_3] a_1 a_3 0 (tidx_1-1))",
                                                                    "pattern": "L_count[=]shift_sint32[]0+havocshift_sint32" },
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (shift_sint32 (global L_tmp_81) 0) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 a_0 (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\n(L_count a_1 a_0 a_1[(shift_sint32 a_0 lidx_5)] 0 (tidx_1-1))",
                                                                    "pattern": "L_counthavocshift_sint32[]0+$Mint_undef" } ] } },
                                                                    "select": null,
                                                                    "children": {} } ] } } ] } } ] } } ],
                                                                    "Negative": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:not",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\na_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 lidx_5)]]\n  [(shift_sint32 a_0 ((to_uint32 (1+lidx_5))-1))]=i_6",
                                                                    "pattern": "=[]$i[=]shift_sint32havocshift_sint32" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(to_uint32 (1+tidx_1))-2",
                                                                    "pattern": "+-2to_uint32+1$tidx" },
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "tidx_1-1",
                                                                    "pattern": "+-1$tidx" } ] } },
                                                                    "select": null,
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 = (shift_sint32 a_0 0) in\nlet a_2 =\n    (havoc Mint_undef_1 Mint_10 a_1 (high_0+middle_0+tidx_1-hidx_0-lidx_5)) in\n(L_count a_2[(shift_sint32 a_0 tidx_1)->a_2[(shift_sint32 a_0 lidx_5)]] a_1\n  i_6 0 (tidx_1-1))",
                                                                    "pattern": "L_count[=]shift_sint32$i0+havocshift_sint32" },
                                                                    { "select": "inside-step",
                                                                    "at": 14,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (shift_sint32 (global L_tmp_81) 0) in\n(L_count\n  (havoc Mint_undef_1 Mint_10 a_0 (high_0+middle_0+tidx_1-hidx_0-lidx_5)) a_0\n  i_6 0 (tidx_1-1))",
                                                                    "pattern": "L_counthavocshift_sint32$i0+$Mint_undef" } ] } },
                                                                    "select": null,
                                                                    "children": {} } ] } } ] } } ] } } ] } } ] } } ] } } ],
                                                                    "Else": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 =\n    (havoc Mint_undef_1 Mint_10 (shift_sint32 a_0 0)\n      (high_0+middle_0+tidx_1-hidx_4-lidx_0)) in\n(L_count a_1[(shift_sint32 a_0 tidx_1)->a_1[(shift_sint32 a_0 hidx_4)]] a_0\n  i_6 middle_0 ((to_uint32 (1+hidx_4))-1))",
                                                                    "pattern": "L_count[=]$a$i$middle+havocshift_sint32" },
                                                                    "children": 
                                                                    { "Unfold 'L_count'": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "(to_uint32 (1+tidx_1))-2",
                                                                    "pattern": "+-2to_uint32+1$tidx" },
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "tidx_1-1",
                                                                    "pattern": "+-1$tidx" } ] } },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 = (shift_sint32 a_0 0) in\nlet a_2 =\n    (havoc Mint_undef_1 Mint_10 a_1 (high_0+middle_0+tidx_1-hidx_4-lidx_0)) in\n(L_count a_2[(shift_sint32 a_0 tidx_1)->a_2[(shift_sint32 a_0 hidx_4)]] a_1\n  i_6 0 ((to_uint32 (1+tidx_1))-2))",
                                                                    "pattern": "L_count[=]shift_sint32$i0+havocshift_sint32" },
                                                                    "children": 
                                                                    { "Assume": 
                                                                    [ { "prover": "alt-ergo",
                                                                    "verdict": "timeout",
                                                                    "time": 10. },
                                                                    { "header": "Cut",
                                                                    "tactic": "Wp.cut",
                                                                    "params": 
                                                                    { "case": "MODUS",
                                                                    "clause": 
                                                                    { "select": "compose",
                                                                    "id": "wp:eq",
                                                                    "args": 
                                                                    [ { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (global L_tmp_81) in\nlet a_1 = (shift_sint32 a_0 0) in\nlet a_2 =\n    (havoc Mint_undef_1 Mint_10 a_1 (high_0+middle_0+tidx_1-hidx_4-lidx_0)) in\n(L_count a_2[(shift_sint32 a_0 tidx_1)->a_2[(shift_sint32 a_0 hidx_4)]] a_1\n  i_6 0 (tidx_1-1))",
                                                                    "pattern": "L_count[=]shift_sint32$i0+havocshift_sint32" },
                                                                    { "select": "inside-step",
                                                                    "at": 13,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "let a_0 = (shift_sint32 (global L_tmp_81) 0) in\n(L_count\n  (havoc Mint_undef_1 Mint_10 a_0 (high_0+middle_0+tidx_1-hidx_4-lidx_0)) a_0\n  i_6 0 (tidx_1-1))",
                                                                    "pattern": "L_counthavocshift_sint32$i0+$Mint_undef" } ] } },
                                                                    "select": null,
                                                                    "children": {} } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ]
