.Dd December 28, 2017
.Dt CRYPTO_CHACHA20_H 3MONOCYPHER
.Os
.Sh NAME
.Nm crypto_chacha20_H
.Nd HChacha20 special-purpose hashing
.Sh SYNOPSIS
.In monocypher.h
.Ft void
.Fo crypto_chacha20_H
.Fa "uint8_t out[32]"
.Fa "const uint8_t key[32]"
.Fa "const uint8_t in[16]"
.Fc
.Sh DESCRIPTION
.Fn crypto_chacha20_H
provides a not-so-cryptographic hash.
It may be used for some specific purposes, such as X25519 key
derivation, or XChacha20 initialisation.
If in doubt, do not use directly.
Use
.Xr crypto_blake2b 3monocypher
instead.
.Pp
The arguments are:
.Bl -tag -width Ds
.It Fa key
A sufficiently random key, such as the output of
.Xr crypto_x25519 3monocypher .
.It Fa in
The space reserved for the Chacha20 nonce and counter.
It does not have to be random.
.It Fa out
A cryptographically secure random number
.Em if
there is enough entropy in
.Fa key .
X25519 shared secrets have enough entropy.
.El
.Sh RETURN VALUES
This function returns nothing.
.Sh EXAMPLES
Simple hash:
.Bd -literal -offset indent
const uint8_t key[32]; /* Must have enough entropy           */
const uint8_t in [16]; /* Does not have to be random         */
uint8_t       out[32]; /* Will be random iff the above holds */
crypto_chacha20_H(out, key, in);
/* Wipe secrets if they are no longer needed */
crypto_wipe(key, 32);
crypto_wipe(in , 16);
.Ed
.Sh SEE ALSO
.Xr crypto_chacha20_encrypt 3monocypher ,
.Xr crypto_key_exchange 3monocypher ,
.Xr intro 3monocypher
.Sh STANDARDS
This function implements HChacha20.
HChacha20 derives from Chacha20 the same way HSalsa20 derives from
Salsa20.
.Sh CAVEATS
.Sy This is not a general-purpose cryptographic hash function .
